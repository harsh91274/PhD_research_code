function [y1] = myNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 27-Nov-2018 18:27:47.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx7 matrix, input #1
% and returns:
%   y = Qx1 matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0;-7971.6;0;0;0;0;0];
x1_step1.gain = [0.04;0.000104906475876756;2;0.000330906684315023;1.42460289194387;0.200962610906241;1.04025798398003];
x1_step1.ymin = -1;

% Layer 1
b1 = [-0.90917046819061186902;-0.30952960366503606826;1.0063312082472766207;0.29314083380657030009;1.5250847672071388139;-1.5328968967497060838;-2.3244716967774516903];
IW1_1 = [0.23660921100589626942 -0.16886398625719375999 0.27525376373915161343 -1.1995670985501454275 -0.35616332706619058257 0.34495296225347715779 0.42021517468485392044;0.79253318519306725776 0.17477625106960398282 0.3657694733801102327 -0.45943032840321185173 -1.2207246097912416438 0.83038485386688776213 0.73247838441259038866;0.31450374284120358181 3.2923418624658320475 0.22824729176057723112 0.39087331599952890304 -2.2481909284763514911 -2.833562558551764976 -1.2150224106598139784;0.49654841934056392905 0.61245215570888955625 -0.29881137615741948377 1.1669671556300773574 0.90114999522714556157 1.600460687981941188 1.0349265608896842661;0.078496600090170676189 2.7050330899830385967 1.613076428217394831 0.18065133907368294275 -1.8410401501661046719 -1.1742013179648493892 -0.30586995279498252476;-0.83214029100021791319 0.85471952597763267701 0.72365387570204009471 0.62818816755285344922 -0.84603461374678656792 0.1197022072961144018 0.33883123352298716302;-0.42365336100969647193 0.11171216263006900071 1.0503717159182879293 0.074468138432800659587 -0.54348667891286550624 0.026623193537711718759 1.1046689887076261982];

% Layer 2
b2 = -0.33543253440840870017;
LW2_1 = [0.88499705746153234376 -0.58811667308433712709 1.0859432191987616889 0.38098172310344785574 -1.2200118212858579447 0.091808166150942810413 -0.18994339495044815225];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 18.6542802245975;
y1_step1.xoffset = -0.03299;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
